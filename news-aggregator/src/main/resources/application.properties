# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3333/news?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = root
##spring.datasource.password =iga5yX?=gPN*

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

##server 
server.port = 9999

##reload thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5


##zuul proxy 
##zuul.host.socket-timeout-millis: 60000
##zuul.host.connect-timeout-millis: 10000
##zuul.routes.dashboard.stripPrefix: true
##zuul.routes.dashboard.url: http://192.168.7.231:8080/#/dashboard/

## URL and their keys

api.url.buzzfeed = https://newsapi.org/v1/articles?source=buzzfeed&sortBy=top&apiKey=7f77a9c9a8364ab8b110a55b7bfae66c
api.url.newsapi = https://newsapi.org/v1/articles?source=cnbc&sortBy=top&apiKey=7f77a9c9a8364ab8b110a55b7bfae66c
api.url.nytimes = https://api.nytimes.com/svc/search/v2/articlesearch.json
api.nytimes.key = c2c107fadbc04775a443c607a496095f
